/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
export namespace Components {
    interface AmountButtons {
    }
    interface AmountInput {
        "maxDecimals": number;
    }
    interface AppLoader {
        "color": string;
        "height": number;
    }
    interface AppTypography {
        "fontFamily": string;
        "styleProps": {};
        "variant": 'h1' | 'h2' | 'h3' | 'secondaryP' | 'secondaryCaption' | 'secondaryMessage' | 'body1';
    }
    interface ButtonWidget {
    }
    interface CollaboratorsList {
    }
    interface FullWidget {
    }
    interface QrCodeWidget {
        "wId": string;
    }
    interface SelectAmount {
    }
    interface StripePayment {
    }
    interface TtWidget {
        "language": string;
        "wId": string;
    }
}
declare global {
    interface HTMLAmountButtonsElement extends Components.AmountButtons, HTMLStencilElement {
    }
    var HTMLAmountButtonsElement: {
        prototype: HTMLAmountButtonsElement;
        new (): HTMLAmountButtonsElement;
    };
    interface HTMLAmountInputElement extends Components.AmountInput, HTMLStencilElement {
    }
    var HTMLAmountInputElement: {
        prototype: HTMLAmountInputElement;
        new (): HTMLAmountInputElement;
    };
    interface HTMLAppLoaderElement extends Components.AppLoader, HTMLStencilElement {
    }
    var HTMLAppLoaderElement: {
        prototype: HTMLAppLoaderElement;
        new (): HTMLAppLoaderElement;
    };
    interface HTMLAppTypographyElement extends Components.AppTypography, HTMLStencilElement {
    }
    var HTMLAppTypographyElement: {
        prototype: HTMLAppTypographyElement;
        new (): HTMLAppTypographyElement;
    };
    interface HTMLButtonWidgetElement extends Components.ButtonWidget, HTMLStencilElement {
    }
    var HTMLButtonWidgetElement: {
        prototype: HTMLButtonWidgetElement;
        new (): HTMLButtonWidgetElement;
    };
    interface HTMLCollaboratorsListElement extends Components.CollaboratorsList, HTMLStencilElement {
    }
    var HTMLCollaboratorsListElement: {
        prototype: HTMLCollaboratorsListElement;
        new (): HTMLCollaboratorsListElement;
    };
    interface HTMLFullWidgetElement extends Components.FullWidget, HTMLStencilElement {
    }
    var HTMLFullWidgetElement: {
        prototype: HTMLFullWidgetElement;
        new (): HTMLFullWidgetElement;
    };
    interface HTMLQrCodeWidgetElement extends Components.QrCodeWidget, HTMLStencilElement {
    }
    var HTMLQrCodeWidgetElement: {
        prototype: HTMLQrCodeWidgetElement;
        new (): HTMLQrCodeWidgetElement;
    };
    interface HTMLSelectAmountElement extends Components.SelectAmount, HTMLStencilElement {
    }
    var HTMLSelectAmountElement: {
        prototype: HTMLSelectAmountElement;
        new (): HTMLSelectAmountElement;
    };
    interface HTMLStripePaymentElement extends Components.StripePayment, HTMLStencilElement {
    }
    var HTMLStripePaymentElement: {
        prototype: HTMLStripePaymentElement;
        new (): HTMLStripePaymentElement;
    };
    interface HTMLTtWidgetElement extends Components.TtWidget, HTMLStencilElement {
    }
    var HTMLTtWidgetElement: {
        prototype: HTMLTtWidgetElement;
        new (): HTMLTtWidgetElement;
    };
    interface HTMLElementTagNameMap {
        "amount-buttons": HTMLAmountButtonsElement;
        "amount-input": HTMLAmountInputElement;
        "app-loader": HTMLAppLoaderElement;
        "app-typography": HTMLAppTypographyElement;
        "button-widget": HTMLButtonWidgetElement;
        "collaborators-list": HTMLCollaboratorsListElement;
        "full-widget": HTMLFullWidgetElement;
        "qr-code-widget": HTMLQrCodeWidgetElement;
        "select-amount": HTMLSelectAmountElement;
        "stripe-payment": HTMLStripePaymentElement;
        "tt-widget": HTMLTtWidgetElement;
    }
}
declare namespace LocalJSX {
    interface AmountButtons {
    }
    interface AmountInput {
        "maxDecimals"?: number;
    }
    interface AppLoader {
        "color"?: string;
        "height"?: number;
    }
    interface AppTypography {
        "fontFamily"?: string;
        "styleProps"?: {};
        "variant"?: 'h1' | 'h2' | 'h3' | 'secondaryP' | 'secondaryCaption' | 'secondaryMessage' | 'body1';
    }
    interface ButtonWidget {
    }
    interface CollaboratorsList {
    }
    interface FullWidget {
    }
    interface QrCodeWidget {
        "wId"?: string;
    }
    interface SelectAmount {
    }
    interface StripePayment {
    }
    interface TtWidget {
        "language"?: string;
        "wId"?: string;
    }
    interface IntrinsicElements {
        "amount-buttons": AmountButtons;
        "amount-input": AmountInput;
        "app-loader": AppLoader;
        "app-typography": AppTypography;
        "button-widget": ButtonWidget;
        "collaborators-list": CollaboratorsList;
        "full-widget": FullWidget;
        "qr-code-widget": QrCodeWidget;
        "select-amount": SelectAmount;
        "stripe-payment": StripePayment;
        "tt-widget": TtWidget;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "amount-buttons": LocalJSX.AmountButtons & JSXBase.HTMLAttributes<HTMLAmountButtonsElement>;
            "amount-input": LocalJSX.AmountInput & JSXBase.HTMLAttributes<HTMLAmountInputElement>;
            "app-loader": LocalJSX.AppLoader & JSXBase.HTMLAttributes<HTMLAppLoaderElement>;
            "app-typography": LocalJSX.AppTypography & JSXBase.HTMLAttributes<HTMLAppTypographyElement>;
            "button-widget": LocalJSX.ButtonWidget & JSXBase.HTMLAttributes<HTMLButtonWidgetElement>;
            "collaborators-list": LocalJSX.CollaboratorsList & JSXBase.HTMLAttributes<HTMLCollaboratorsListElement>;
            "full-widget": LocalJSX.FullWidget & JSXBase.HTMLAttributes<HTMLFullWidgetElement>;
            "qr-code-widget": LocalJSX.QrCodeWidget & JSXBase.HTMLAttributes<HTMLQrCodeWidgetElement>;
            "select-amount": LocalJSX.SelectAmount & JSXBase.HTMLAttributes<HTMLSelectAmountElement>;
            "stripe-payment": LocalJSX.StripePayment & JSXBase.HTMLAttributes<HTMLStripePaymentElement>;
            "tt-widget": LocalJSX.TtWidget & JSXBase.HTMLAttributes<HTMLTtWidgetElement>;
        }
    }
}
