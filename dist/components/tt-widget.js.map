{"file":"tt-widget.js","mappings":";;;;;;;;;;;;;;AAAA,MAAM,iBAAiB,GAAG,EAAE,CAAC;AAC7B,uBAAe,iBAAiB;;MCUnB,cAAc;;;;;wBAEE,IAAI;;uBAGZ,KAAK;;+BAEW,IAAI;;IAEvC,MAAM,gBAAgB;;QAEpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI;YACF,IAAI,CAAC,IAAI,GAAG,MAAM,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC/C,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;SACjC;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACxD,IAAI,CAAC,KAAK,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,2BAA2B,CAAC;YAClF,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;SAC5B;gBAAS;YACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;KACF;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,mBAAmB,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,WAAW,CAAC,IAAI,CAAC,QAA8B,CAAC,CAAC;SAClD;KACF;IAGD,WAAW,CAAC,OAAe;QACzB,MAAM,kBAAkB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACzC,OAAO,GAAG,IAAI,CAAC;SAChB;QAEDA,QAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;KAChC;IAEO,YAAY;;QAClB,IAAI,MAAA,IAAI,CAAC,IAAI,0CAAE,IAAI,EAAE;YACnB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;gBACpB,KAAK,IAAI;oBACP,OAAO,sBAAe,CAAC;gBACzB,KAAK,IAAI;oBACP,OAAO,wBAAiB,CAAC;gBAC3B,KAAK,IAAI;oBACP,OAAO,sBAAgB,GAAG,EAAE,IAAI,CAAC,GAAG,GAAI,CAAC;gBAC3C;oBACE,OAAO,IAAI,CAAC;aACf;SACF;KACF;IAED,MAAM;QACJ,QACE,EAAC,IAAI,uDACF,IAAI,CAAC,YAAY,EAAE,CACf,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["i18n"],"sources":["src/components/widget-selector/widget-selector.css?tag=tt-widget","src/components/widget-selector/widget-selector.tsx"],"sourcesContent":["","import { Component, h, Host, Prop, State, Watch } from '@stencil/core';\r\nimport { fetchWidgetDetails } from '@src/services/services';\r\nimport { IWidgetDetails, SupportedLanguages } from '@src/interfaces/interfaces';\r\nimport { state } from '@src/store/store';\r\nimport { setLanguage } from '@src/utils/i18n';\r\nimport i18n from '@src/utils/i18n';\r\n@Component({\r\n  tag: 'tt-widget',\r\n  styleUrl: './widget-selector.css',\r\n  shadow: false,\r\n})\r\nexport class WidgetSelector {\r\n  @Prop({ reflect: true, mutable: true }) wId: string;\r\n  @Prop() language: string = 'en'; // Default to English\r\n\r\n  @State() error: string;\r\n  @State() loading = false;\r\n  @State() data: IWidgetDetails;\r\n  @State() currentLanguage: string = 'en';\r\n\r\n  async getWidgetDetails() {\r\n    // fetch widget details from the server and set the widget properties in the store state object\r\n    this.loading = true;\r\n    this.error = null;\r\n    try {\r\n      this.data = await fetchWidgetDetails(this.wId);\r\n      state.widgetDetails = this.data;\r\n    } catch (error) {\r\n      console.error('Failed to fetch widget details:', error);\r\n      this.error = error instanceof Error ? error.message : 'An unknown error occurred';\r\n      state.widgetDetails = null;\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.wId) {\r\n      this.getWidgetDetails();\r\n      this.error = null;\r\n    } else {\r\n      this.error = 'Widget ID missing';\r\n    }\r\n    if (this.language) {\r\n      setLanguage(this.language as SupportedLanguages); // Store the language in the global store\r\n    }\r\n  }\r\n\r\n  @Watch('lang') // Watch for language changes\r\n  setLanguage(newLang: string) {\r\n    const supportedLanguages = ['en', 'fr'];\r\n    if (!supportedLanguages.includes(newLang)) {\r\n      newLang = 'en'; // Fallback\r\n    }\r\n\r\n    i18n.changeLanguage(newLang);\r\n    this.currentLanguage = newLang;\r\n  }\r\n\r\n  private renderWidget() {\r\n    if (this.data?.type) {\r\n      switch (this.data.type) {\r\n        case 'WG':\r\n          return <full-widget />;\r\n        case 'BT':\r\n          return <button-widget />;\r\n        case 'QR':\r\n          return <qr-code-widget wId={this.wId} />;\r\n        default:\r\n          return null; // handle unknown type\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.renderWidget()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}