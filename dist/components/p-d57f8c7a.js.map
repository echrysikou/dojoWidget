{"file":"p-d57f8c7a.js","mappings":"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","names":["i18n"],"sources":["src/components/full-widget/select-amount/amount-input/amount-input.css?tag=amount-input","src/components/full-widget/select-amount/amount-input/amount-input.tsx"],"sourcesContent":[".enter-amount-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 14px;\r\n    margin-top: 15px;\r\n}\r\n\r\n.form-control {\r\n    width: 100%;\r\n    margin-top: -5px;\r\n    background-color: var(--common-white);\r\n    border-radius: 5px;\r\n    box-shadow: 0px 0px 14px 0px rgba(0, 0, 0, 0.05);\r\n    box-sizing: border-box;\r\n}\r\n\r\n.input-container {\r\n    display: flex;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    padding: 8px;\r\n    transition: all 0.3s ease-in-out;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.input-adornment {\r\n    margin-right: 8px;\r\n    font-size: 16px;\r\n    color: var(--text);\r\n    line-height: normal;\r\n    box-sizing: border-box;\r\n}\r\n\r\ninput {\r\n    flex: 1;\r\n    border: none;\r\n    outline: none;\r\n    font-size: 16px;\r\n    font-family: var(--font-secondary);\r\n    font-weight: 400;\r\n    color: var(--text);\r\n    background: transparent;\r\n    line-height: normal;\r\n    box-sizing: border-box;\r\n}\r\n\r\ninput:focus {\r\n    border: none;\r\n    outline: none;\r\n}\r\n\r\n.low-amount-error {\r\n    margin-left: 0px;\r\n    margin-top: 6px;\r\n    font-weight: 500;\r\n\r\n}","import { Component, Element, h, Prop, State, Watch } from '@stencil/core';\r\nimport i18n from '@src/utils/i18n';\r\nimport { onChange, state } from '@src/store/store';\r\nimport { getSafeDangerColor } from '@src/utils/utils';\r\n\r\n@Component({\r\n  tag: 'amount-input',\r\n  styleUrl: 'amount-input.css',\r\n  shadow: false,\r\n})\r\nexport class AmountInput {\r\n  @Element() el: HTMLElement;\r\n  private inputRef: HTMLInputElement;\r\n\r\n  @Prop() maxDecimals: number = 2;\r\n\r\n  @State() selectedAmount: string = '';\r\n  @State() isHovered: boolean = false;\r\n  @State() amountTooLow: boolean = false; // Stripe allows amounts greater than 1Euro\r\n\r\n  @Watch('selectedAmount')\r\n  watchAmount(newValue: string) {\r\n    const amount = newValue ? parseFloat(newValue) : 0;\r\n\r\n    state.stripe = { paymentElementIntentAmount: amount * 100 };\r\n    this.amountTooLow = amount < 1;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.selectedAmount = '';\r\n  }\r\n\r\n  // Validate input is a number with max two decimals\r\n  isValidNumber(value: string): boolean {\r\n    const regex = new RegExp(`^\\\\d*(\\\\.\\\\d{0,${this.maxDecimals}})?$`);\r\n    return regex.test(value);\r\n  }\r\n\r\n  handleInput(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    const inputValue = input.value;\r\n\r\n    if (this.isValidNumber(inputValue)) {\r\n      this.selectedAmount = inputValue;\r\n    } else {\r\n      // If invalid, revert to the last valid value\r\n      input.value = this.selectedAmount;\r\n    }\r\n  }\r\n\r\n  // handle external state changes\r\n  handleStateChange = () => {\r\n    this.selectedAmount = (state.stripe.paymentElementIntentAmount / 100).toString();\r\n    if (this.inputRef) {\r\n      this.inputRef.value = this.selectedAmount; // Update the input's value directly\r\n    }\r\n  };\r\n\r\n  componentDidLoad() {\r\n    onChange('stripe', this.handleStateChange);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    onChange('stripe', this.handleStateChange); // Remove the listener\r\n  }\r\n\r\n  render() {\r\n    const { font, themeColor: bgColor, borderColor: secondaryColor } = state.widgetDetails;\r\n\r\n    return (\r\n      <div class=\"enter-amount-container\">\r\n        <app-typography\r\n          variant=\"secondaryCaption\"\r\n          fontFamily={font.includes('Baloo Bhaijaan 2') ? 'Raleway, sans-serif' : font}\r\n          styleProps={{\r\n            fontWeight: '500',\r\n          }}\r\n        >\r\n          {i18n.t('enterAmount')}\r\n        </app-typography>\r\n\r\n        <div class=\"form-control\" onMouseOver={() => (this.isHovered = true)} onMouseOut={() => (this.isHovered = false)} style={{ height: '56px' }}>\r\n          <div class=\"input-container\" style={{ border: `${this.isHovered ? '2px' : '0.5px'} solid ${secondaryColor}`, height: '56px' }}>\r\n            <span class=\"input-adornment\" style={{ fontFamily: font }}>\r\n              â‚¬\r\n            </span>\r\n\r\n            <input\r\n              id={`outlined-adornment-amount${this.selectedAmount}`}\r\n              ref={el => (this.inputRef = el)}\r\n              style={{ fontFamily: font }}\r\n              type=\"number\"\r\n              onInput={event => this.handleInput(event)}\r\n              step=\"0.01\"\r\n              min=\"1\"\r\n              value={this.selectedAmount}\r\n            />\r\n          </div>\r\n          {this.amountTooLow && (\r\n            <app-typography variant=\"secondaryMessage\" class=\"low-amount-error\" style={{ color: getSafeDangerColor(bgColor) }}>\r\n              {i18n.t('minStripeAmount')}\r\n            </app-typography>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}