{"version":3,"file":"stripe-payment.js","sourceRoot":"","sources":["../../../../src/components/full-widget/stripe-element/stripe-payment.tsx"],"names":[],"mappings":"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","sourcesContent":["import { state } from '@src/store/store';\r\nimport { getContrastColor, getSafeDangerColor, getStripeElementAppearance } from '@src/utils/utils';\r\nimport { Component, Env, h, Host, State } from '@stencil/core';\r\nimport { Appearance, Layout, loadStripe, Stripe, StripeElement, StripeElements, StripeElementsOptions } from '@stripe/stripe-js';\r\nimport i18n from '@src/utils/i18n';\r\nimport { createPaymentIntent } from '@src/services/services';\r\n\r\n@Component({\r\n  tag: 'stripe-payment',\r\n  styleUrl: './stripe-payment.css',\r\n  shadow: false, //Stripe requires shadow to be false\r\n})\r\nexport class StripePayment {\r\n  @State() stripe: Stripe | null = null;\r\n  @State() elements: StripeElements | null = null;\r\n  @State() paymentElement: StripeElement | null = null;\r\n  @State() paymentElementOptions: { layout: Layout };\r\n  @State() appearance: Appearance = {};\r\n  @State() isLoading: boolean = false;\r\n  @State() disablePayButton: boolean = false;\r\n  @State() isHovered = false;\r\n  @State() errorMsg: string = '';\r\n\r\n  async componentDidLoad() {\r\n    this.stripe = await loadStripe(Env.STRIPE_PUBLISHABLE_KEY);\r\n\r\n    if (this.stripe) {\r\n      const options: StripeElementsOptions | undefined = {\r\n        appearance: this.appearance,\r\n        loader: 'auto',\r\n        mode: 'payment',\r\n        amount: state.stripe.paymentElementIntentAmount,\r\n        currency: 'eur',\r\n      };\r\n\r\n      // Set up Stripe.js and Elements to use in checkout form\r\n      this.elements = this.stripe.elements(options);\r\n\r\n      // Create and mount the Payment Element\r\n      this.paymentElementOptions = { layout: 'tabs' as Layout };\r\n\r\n      this.paymentElement = this.elements.create('payment', this.paymentElementOptions);\r\n      this.paymentElement.mount('#payment-element');\r\n    }\r\n    if (!state.widgetDetails) {\r\n      this.disablePayButton = true;\r\n    } else {\r\n      this.disablePayButton = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { font, fontColor, themeColor: primaryColor, borderColor: secondaryColor } = state.widgetDetails;\r\n\r\n    this.appearance = getStripeElementAppearance(fontColor, primaryColor, secondaryColor);\r\n\r\n    const handleError = error => {\r\n      if (typeof error === 'string') {\r\n        this.errorMsg = error;\r\n      } else if (error.type && error.type === 'validation_error') {\r\n        this.errorMsg = i18n.t('validationError');\r\n      } else if (error.message && typeof error.message === 'string') {\r\n        this.errorMsg = error.message;\r\n      }\r\n      this.isLoading = false;\r\n    };\r\n\r\n    const handlePaymentIntentCreation = async () => {\r\n      try {\r\n        const res = await createPaymentIntent({\r\n          amount: state.stripe.paymentElementIntentAmount,\r\n          elementId: state.widgetDetails.uuid,\r\n        });\r\n        return res.clientSecret;\r\n      } catch (error) {\r\n        console.error('Failed to create payment intent:', error);\r\n        handleError(error);\r\n        throw error; // Re-throw the error to stop further execution\r\n      }\r\n    };\r\n\r\n    const handlePaymentConfirmation = async (clientSecret: string) => {\r\n      try {\r\n        await this.stripe.confirmPayment({\r\n          elements: this.elements,\r\n          clientSecret,\r\n          confirmParams: {\r\n            return_url: window.location.href,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error('Failed to confirm payment:', error);\r\n        handleError(error);\r\n        throw error; // Re-throw the error to stop further execution\r\n      }\r\n    };\r\n\r\n    const handleSubmit = async (event: Event) => {\r\n      event.preventDefault();\r\n\r\n      if (this.isLoading || !this.stripe || !this.elements || !state.stripe.paymentElementIntentAmount || !state.stripe.amountIsValid || this.disablePayButton) {\r\n        return;\r\n      }\r\n\r\n      this.isLoading = true;\r\n      this.errorMsg = '';\r\n\r\n      // Trigger form validation and wallet collection\r\n      const { error: submitError } = await this.elements.submit();\r\n\r\n      if (submitError) {\r\n        handleError(submitError);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const clientSecret = await handlePaymentIntentCreation();\r\n        await handlePaymentConfirmation(clientSecret);\r\n      } catch (error) {\r\n        // Errors are already handled in the individual functions\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Host>\r\n        <div class=\"stripe-container\">\r\n          <app-typography\r\n            variant=\"secondaryP\"\r\n            fontFamily={font}\r\n            styleProps={{\r\n              fontWeight: '700',\r\n            }}\r\n          >\r\n            {i18n.t('choosePaymentMethod')}\r\n          </app-typography>\r\n          <form id=\"payment-form\" class=\"stripe-form\" onSubmit={event => handleSubmit(event)}>\r\n            <div id=\"payment-element\"></div>\r\n            <button\r\n              title={!state.stripe.paymentElementIntentAmount || !state.stripe.amountIsValid ? i18n.t('missingAmount') : ''}\r\n              class=\"stripe-pay-button\"\r\n              disabled={this.isLoading || !this.stripe || !this.elements || !state.stripe.paymentElementIntentAmount || !state.stripe.amountIsValid || this.disablePayButton}\r\n              id=\"submit\"\r\n              style={{\r\n                backgroundColor: secondaryColor,\r\n                color: getContrastColor(secondaryColor).blackOrWhite,\r\n                transform: this.isHovered ? 'scale(1.01)' : 'none',\r\n              }}\r\n              onMouseOver={() => (this.isHovered = true)}\r\n              onMouseOut={() => (this.isHovered = false)}\r\n            >\r\n              {this.isLoading ? <app-loader height={25} color={getContrastColor(secondaryColor).blackOrWhite} /> : i18n.t('payNow')}\r\n            </button>\r\n            <div id=\"error-message\">\r\n              <app-typography variant=\"secondaryP\" class=\"stripe-error\" fontFamily={font} style={{ color: getSafeDangerColor(primaryColor) }}>\r\n                {this.errorMsg}\r\n              </app-typography>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}