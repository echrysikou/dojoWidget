{"version":3,"file":"amount-buttons.js","sourceRoot":"","sources":["../../../../../src/components/full-widget/select-amount/amount-buttons/amount-buttons.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACpD,OAAO,IAAI,MAAM,iBAAiB,CAAC;AACnC,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,MAAM,sBAAsB,CAAC;AACzG,OAAO,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAOzE,MAAM,OAAO,aAAa;;6BACgB,IAAI;;IAE5C,MAAM;;QACJ,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,WAAW,EAAE,cAAc,EAAE,GAAG,KAAK,CAAC,aAAa,CAAC;QAC5F,MAAM,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAE/B,IAAI,aAAa,GAAG,oBAAoB,CAAC;QACzC,IAAI,eAAe,GAAG,yBAAyB,CAAC;QAEhD,IAAI,YAAY,IAAI,cAAc,EAAE,CAAC;YACnC,MAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;YACxG,aAAa,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,aAAa,mCAAI,oBAAoB,CAAC;YAC7D,eAAe,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,kBAAkB,mCAAI,yBAAyB,CAAC;QAC3E,CAAC;QAED,MAAM,YAAY,GAAG,CAAC,MAAc,EAAE,EAAE;YACtC,KAAK,CAAC,MAAM,GAAG,EAAE,0BAA0B,EAAE,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,UAAU;QACzE,CAAC,CAAC;QAEF,OAAO,CACL,4DAAK,KAAK,EAAC,yBAAyB;YAClC,uEACE,OAAO,EAAC,YAAY,EACpB,UAAU,EAAE,IAAI,EAChB,UAAU,EAAE;oBACV,UAAU,EAAE,KAAK;iBAClB,IAEA,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CACR;YACjB,4DAAK,KAAK,EAAC,uBAAuB,IAC/B,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACvB,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,KAAK,MAAM,CAAC;gBAChD,MAAM,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa,CAAC;gBAC7D,MAAM,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,eAAe,CAAC;gBACnE,MAAM,aAAa,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC;gBAC/D,OAAO,CACL,cACE,GAAG,EAAE,UAAU,MAAM,MAAM,EAC3B,KAAK,EAAC,cAAc,EACpB,OAAO,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,EACnC,KAAK,EAAE;wBACL,UAAU,EAAE,IAAI;wBAChB,MAAM,EAAE,eAAe,aAAa,EAAE;wBACtC,eAAe,EAAE,SAAS;wBAC1B,KAAK,EAAE,aAAa;qBACrB,EACD,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,EAChD,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAE5C,MAAM;6BACA,CACV,CAAC;YACJ,CAAC,CAAC,CACE,CACF,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, State } from '@stencil/core';\r\nimport i18n from '@src/utils/i18n';\r\nimport { state } from '@src/store/store';\r\nimport { predefinedThemes, WG_DEFAULT_BUTTON_BG, WG_DEFAULT_ELEMENT_BORDER } from '@src/utils/constants';\r\nimport { areColorArraysEqual, getContrastColor } from '@src/utils/utils';\r\n\r\n@Component({\r\n  tag: 'amount-buttons',\r\n  styleUrl: 'amount-buttons.css',\r\n  shadow: true,\r\n})\r\nexport class AmountButtons {\r\n  @State() hoveredButton: number | null = null; // Track which button is hovered\r\n\r\n  render() {\r\n    const { font, themeColor: primaryColor, borderColor: secondaryColor } = state.widgetDetails;\r\n    const btnAmounts = [3, 10, 15];\r\n\r\n    let buttonBgColor = WG_DEFAULT_BUTTON_BG;\r\n    let elemBorderColor = WG_DEFAULT_ELEMENT_BORDER;\r\n\r\n    if (primaryColor && secondaryColor) {\r\n      const theme = predefinedThemes.find(t => areColorArraysEqual(t.colors, [primaryColor, secondaryColor]));\r\n      buttonBgColor = theme?.buttonBgColor ?? WG_DEFAULT_BUTTON_BG;\r\n      elemBorderColor = theme?.elementBorderColor ?? WG_DEFAULT_ELEMENT_BORDER;\r\n    }\r\n\r\n    const updateAmount = (amount: number) => {\r\n      state.stripe = { paymentElementIntentAmount: amount * 100 }; //in cents\r\n    };\r\n\r\n    return (\r\n      <div class=\"select-amount-container\">\r\n        <app-typography\r\n          variant=\"secondaryP\"\r\n          fontFamily={font}\r\n          styleProps={{\r\n            fontWeight: '700',\r\n          }}\r\n        >\r\n          {i18n.t('selectAmount')}\r\n        </app-typography>\r\n        <div class=\"amount-btns-container\">\r\n          {btnAmounts.map(amount => {\r\n            const isHovered = this.hoveredButton === amount;\r\n            const currentBg = isHovered ? secondaryColor : buttonBgColor;\r\n            const currentBorder = isHovered ? secondaryColor : elemBorderColor;\r\n            const contrastColor = getContrastColor(currentBg).blackOrWhite;\r\n            return (\r\n              <button\r\n                key={`amount_${amount}_btn`}\r\n                class=\"widgetButton\"\r\n                onClick={() => updateAmount(amount)}\r\n                style={{\r\n                  fontFamily: font,\r\n                  border: `0.5px solid ${currentBorder}`,\r\n                  backgroundColor: currentBg,\r\n                  color: contrastColor,\r\n                }}\r\n                onMouseOver={() => (this.hoveredButton = amount)}\r\n                onMouseOut={() => (this.hoveredButton = null)}\r\n              >\r\n                {amount}â‚¬\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}